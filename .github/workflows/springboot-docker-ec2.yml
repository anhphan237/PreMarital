name: Spring Boot CI/CD with Docker Multi-Stage & AWS EC2

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build Docker image with Multi-Stage
        run: |
          docker build -t premarital .

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Tag and Push Docker image
        run: |
          docker tag premarital ${{ secrets.DOCKER_USERNAME }}/premarital:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/premarital:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to AWS EC2
        env:
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        run: |
          echo "$SSH_KEY" | base64 --decode > private_key.pem
          chmod 600 private_key.pem
          ssh -i StrictHostKeyChecking=no -i private_key.pem $SERVER_USER@$SERVER_HOST << 'EOF'
            docker stop springboot-container || true
            docker rm springboot-container || true
            docker pull $DOCKER_USERNAME/premarital:latest
            docker run -d -p 8080:8080 --name springboot-container $DOCKER_USERNAME/premarital:latest
          EOF
